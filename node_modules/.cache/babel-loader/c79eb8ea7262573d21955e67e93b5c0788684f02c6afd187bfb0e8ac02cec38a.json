{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"./resturants.json\";\nconst yearInMilliseconds = 31536000000;\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    restaurantsData: data.restaurants,\n    value: data.restaurants,\n    chefRestaurants: {}\n  },\n  reducers: {\n    all: state => {\n      console.log(\"all\");\n      state.value = state.restaurantsData;\n    },\n    newRestaurants: state => {\n      const currentDate = new Date().getTime();\n      state.value = state.restaurantsData.filter(e => {\n        return new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2;\n      });\n    },\n    openRestaurants: state => {\n      const currentHour = new Date().getHours();\n      state.value = state.restaurantsData.filter(e => {\n        return e.openHour <= currentHour && currentHour < e.closeHour;\n      });\n    },\n    popularRestaurants: state => {\n      const temp = state.restaurantsData;\n      state.value = temp.sort((a, b) => a.visited - b.visited).slice(0, 10);\n    },\n    topThreePopularRestaurants: state => {\n      state.value = state.restaurantsData.sort((a, b) => a.visited - b.visited).slice(0, 3);\n    },\n    filterByRating: (state, action) => {\n      state.value = state.restaurantsData.filter(e => action.payload.includes(e.rating));\n    },\n    profileRestaurant: (state, action) => {\n      state.value = state.restaurantsData.filter(e => e._id === action.payload);\n    },\n    chefRestaurant: (state, action) => {\n      if (action.payload.length > 0) {\n        state.chefRestaurants = state.restaurantsData.filter(e => e.chefId === action.payload);\n      }\n    }\n  }\n});\nexport const {\n  all,\n  newRestaurants,\n  openRestaurants,\n  popularRestaurants,\n  filterByRating,\n  topThreePopularRestaurants,\n  profileRestaurant,\n  chefRestaurant\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","yearInMilliseconds","restaurantsSlice","name","initialState","restaurantsData","restaurants","value","chefRestaurants","reducers","all","state","console","log","newRestaurants","currentDate","Date","getTime","filter","e","startDate","openRestaurants","currentHour","getHours","openHour","closeHour","popularRestaurants","temp","sort","a","b","visited","slice","topThreePopularRestaurants","filterByRating","action","payload","includes","rating","profileRestaurant","_id","chefRestaurant","length","chefId","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/data/resturantSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IRestaurant } from \"../component/Types/Interfaces/IRestaurantCard\";\r\nimport data from \"./resturants.json\";\r\nconst yearInMilliseconds = 31536000000;\r\nexport interface IRestaurantsState {\r\n  value: IRestaurant[];\r\n  chefRestaurants: IRestaurant[];\r\n}\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    restaurantsData: data.restaurants,\r\n    value: data.restaurants,\r\n    chefRestaurants: {},\r\n  },\r\n  reducers: {\r\n    all: (state) => {\r\n      console.log(\"all\");\r\n      state.value = state.restaurantsData;\r\n    },\r\n    newRestaurants: (state) => {\r\n      const currentDate = new Date().getTime();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return (\r\n          new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2\r\n        );\r\n      });\r\n    },\r\n    openRestaurants: (state) => {\r\n      const currentHour = new Date().getHours();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return e.openHour <= currentHour && currentHour < e.closeHour;\r\n      });\r\n    },\r\n    popularRestaurants: (state) => {\r\n      const temp = state.restaurantsData;\r\n      state.value = temp.sort((a, b) => a.visited - b.visited).slice(0, 10);\r\n    },\r\n    topThreePopularRestaurants: (state) => {\r\n      state.value = state.restaurantsData\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n    filterByRating: (state, action) => {\r\n      state.value = state.restaurantsData.filter((e) =>\r\n        action.payload.includes(e.rating)\r\n      );\r\n    },\r\n    profileRestaurant: (state, action) => {\r\n      state.value = state.restaurantsData.filter(\r\n        (e) => e._id === action.payload\r\n      );\r\n    },\r\n    chefRestaurant: (state, action) => {\r\n      if (action.payload.length > 0) {\r\n        state.chefRestaurants = state.restaurantsData.filter(\r\n          (e) => e.chefId === action.payload\r\n        );\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  all,\r\n  newRestaurants,\r\n  openRestaurants,\r\n  popularRestaurants,\r\n  filterByRating,\r\n  topThreePopularRestaurants,\r\n  profileRestaurant,\r\n  chefRestaurant,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\full stack curse\\\\epicure\\\\src\\\\component\\\\Pages\\\\ChefPage\\\\ChefPage.tsx\",\n  _s = $RefreshSig$();\nimport { SwitchButton } from \"../../Styled_Components/Buttons\";\nimport { FilterButtonLine } from \"../../Styled_Components/filterButtonLine\";\nimport { GridCards, PageCenterStyle } from \"../../Styled_Components/gridPagesStyles\";\nimport ChefCard from \"../../Cards/ChefCard/ChefCard\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allChefs, newChefs, popularChefs } from \"../../../data/chefSlicer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChafPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(allChefs());\n  }, []);\n  const chefs = useSelector(state => state.chefs.value);\n  const [withFilter, setFilter] = useState(\"all\");\n  return /*#__PURE__*/_jsxDEV(PageCenterStyle, {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"all\",\n        bold: withFilter === \"all\",\n        onClick: value => {\n          setFilter(value.target.name);\n          dispatch(allChefs());\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"New\",\n        bold: withFilter === \"New\",\n        onClick: value => {\n          setFilter(value.target.name);\n          dispatch(newChefs());\n        },\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"MostViewed\",\n        bold: withFilter === \"MostViewed\",\n        onClick: value => {\n          setFilter(value.target.name);\n          dispatch(popularChefs());\n        },\n        children: \"Most Viewed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridCards, {\n      cellSize: 478,\n      children: chefs.map(chef => {\n        return /*#__PURE__*/_jsxDEV(ChefCard, {\n          chefData: chef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ChafPage, \"XSj8i1hfINABFQPxjbqSFSDPjGk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChafPage;\nexport default ChafPage;\nvar _c;\n$RefreshReg$(_c, \"ChafPage\");","map":{"version":3,"names":["SwitchButton","FilterButtonLine","GridCards","PageCenterStyle","ChefCard","useEffect","useState","useDispatch","useSelector","allChefs","newChefs","popularChefs","jsxDEV","_jsxDEV","ChafPage","_s","dispatch","chefs","state","value","withFilter","setFilter","children","name","bold","onClick","target","fileName","_jsxFileName","lineNumber","columnNumber","cellSize","map","chef","chefData","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/component/Pages/ChefPage/ChefPage.tsx"],"sourcesContent":["import { SwitchButton } from \"../../Styled_Components/Buttons\";\r\nimport { FilterButtonLine } from \"../../Styled_Components/filterButtonLine\";\r\nimport {\r\n  GridCards,\r\n  PageCenterStyle,\r\n} from \"../../Styled_Components/gridPagesStyles\";\r\nimport data from \"../../../data/resturants.json\";\r\nimport ChefCard from \"../../Cards/ChefCard/ChefCard\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../data/store\";\r\nimport { allChefs, newChefs, popularChefs } from \"../../../data/chefSlicer\";\r\nconst ChafPage = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(allChefs());\r\n  }, []);\r\n  const chefs = useSelector((state: RootState) => state.chefs.value);\r\n  const [withFilter, setFilter] = useState(\"all\");\r\n  return (\r\n    <PageCenterStyle>\r\n      <FilterButtonLine>\r\n        <SwitchButton\r\n          name=\"all\"\r\n          bold={withFilter === \"all\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(allChefs());\r\n          }}\r\n        >\r\n          All\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"New\"\r\n          bold={withFilter === \"New\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(newChefs());\r\n          }}\r\n        >\r\n          New\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MostViewed\"\r\n          bold={withFilter === \"MostViewed\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(popularChefs());\r\n          }}\r\n        >\r\n          Most Viewed\r\n        </SwitchButton>\r\n      </FilterButtonLine>\r\n      <GridCards cellSize={478}>\r\n        {chefs.map((chef) => {\r\n          return <ChefCard chefData={chef} />;\r\n        })}\r\n      </GridCards>\r\n    </PageCenterStyle>\r\n  );\r\n};\r\nexport default ChafPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst yearInMilliseconds = 31536000000;\nconst getRestaurantData = async () => {\n  return await fetch(\"http://localhost:8000/restaurants\").then(response => response.json()).then(data => {\n    return data.data;\n  }).catch(error => {\n    console.error(\"Error getting Restaurant data:\", error);\n  });\n};\nexport const restaurantsData = await getRestaurantData();\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    restaurantsData: restaurantsData,\n    value: [],\n    chefRestaurants: []\n  },\n  reducers: {\n    all: state => {\n      state.value = restaurantsData;\n    },\n    updatedRestaurant: (state, action) => {\n      state.value = action.payload;\n      state.restaurantsData = action.payload;\n    },\n    newRestaurants: state => {\n      const currentDate = new Date().getTime();\n      state.value = restaurantsData.filter(e => {\n        return new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2;\n      });\n    },\n    openRestaurants: state => {\n      const currentHour = new Date().getHours();\n      state.value = restaurantsData.filter(e => {\n        return e.openHour <= currentHour && currentHour < e.closeHour;\n      });\n    },\n    popularRestaurants: state => {\n      state.value = [...restaurantsData].sort((a, b) => a.visited - b.visited).slice(0, 10);\n    },\n    topThreePopularRestaurants: state => {\n      state.value = [...restaurantsData].sort((a, b) => a.visited - b.visited).slice(0, 3);\n    },\n    filterByRating: (state, action) => {\n      state.value = restaurantsData.filter(e => action.payload.includes(e.rating));\n    },\n    profileRestaurant: (state, action) => {\n      state.value = restaurantsData.filter(e => e._id === action.payload);\n    },\n    chefRestaurant: (state, action) => {\n      state.chefRestaurants = restaurantsData.filter(e => e.chefId === action.payload);\n    }\n  }\n});\nexport const {\n  all,\n  newRestaurants,\n  updatedRestaurant,\n  openRestaurants,\n  popularRestaurants,\n  filterByRating,\n  topThreePopularRestaurants,\n  profileRestaurant,\n  chefRestaurant\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","yearInMilliseconds","getRestaurantData","fetch","then","response","json","data","catch","error","console","restaurantsData","restaurantsSlice","name","initialState","value","chefRestaurants","reducers","all","state","updatedRestaurant","action","payload","newRestaurants","currentDate","Date","getTime","filter","e","startDate","openRestaurants","currentHour","getHours","openHour","closeHour","popularRestaurants","sort","a","b","visited","slice","topThreePopularRestaurants","filterByRating","includes","rating","profileRestaurant","_id","chefRestaurant","chefId","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/data/resturantSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IRestaurant } from \"../component/Types/Interfaces/IRestaurantCard\";\r\nimport data from \"./resturants.json\";\r\nconst yearInMilliseconds = 31536000000;\r\nexport interface IRestaurantsState {\r\n  restaurantsData: IRestaurant[];\r\n  value: IRestaurant[];\r\n  chefRestaurants: IRestaurant[];\r\n}\r\n\r\nconst getRestaurantData = async () => {\r\n  return await fetch(\"http://localhost:8000/restaurants\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error getting Restaurant data:\", error);\r\n    });\r\n};\r\nexport const restaurantsData: IRestaurant[] = await getRestaurantData();\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    restaurantsData: restaurantsData,\r\n    value: [],\r\n    chefRestaurants: [],\r\n  } as IRestaurantsState,\r\n  reducers: {\r\n    all: (state) => {\r\n      state.value = restaurantsData;\r\n    },\r\n    updatedRestaurant: (state, action) => {\r\n      state.value = action.payload;\r\n      state.restaurantsData = action.payload;\r\n    },\r\n    newRestaurants: (state) => {\r\n      const currentDate = new Date().getTime();\r\n      state.value = restaurantsData.filter((e) => {\r\n        return (\r\n          new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2\r\n        );\r\n      });\r\n    },\r\n    openRestaurants: (state) => {\r\n      const currentHour = new Date().getHours();\r\n      state.value = restaurantsData.filter((e) => {\r\n        return e.openHour <= currentHour && currentHour < e.closeHour;\r\n      });\r\n    },\r\n    popularRestaurants: (state) => {\r\n      state.value = [...restaurantsData]\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 10);\r\n    },\r\n    topThreePopularRestaurants: (state) => {\r\n      state.value = [...restaurantsData]\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n    filterByRating: (state, action) => {\r\n      state.value = restaurantsData.filter((e) =>\r\n        action.payload.includes(e.rating)\r\n      );\r\n    },\r\n    profileRestaurant: (state, action) => {\r\n      state.value = restaurantsData.filter((e) => e._id === action.payload);\r\n    },\r\n    chefRestaurant: (state, action) => {\r\n      state.chefRestaurants = restaurantsData.filter(\r\n        (e) => e.chefId === action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  all,\r\n  newRestaurants,\r\n  updatedRestaurant,\r\n  openRestaurants,\r\n  popularRestaurants,\r\n  filterByRating,\r\n  topThreePopularRestaurants,\r\n  profileRestaurant,\r\n  chefRestaurant,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
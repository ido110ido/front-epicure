{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { DayPart } from \"../component/Types/enums/DishEnums\";\nimport data from \"./resturants.json\";\nimport { serverAddress } from \"./store\";\nconst filterByDayPart = async (restaurantId, DayPart) => {\n  try {\n    let data = await axios.post(serverAddress + \"/dishes\", {\n      restaurantId: restaurantId,\n      DayPart: DayPart\n    });\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const dishSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    dishesData: data.dishes,\n    value: data.dishes\n  },\n  reducers: {\n    morning: (state, action) => {\n      filterByDayPart(action.payload.id, action.payload.DayPart);\n    },\n    noon: (state, action) => {\n      state.value = state.dishesData.filter(e => e.DayPart === DayPart.Launch && e.resturantId === action.payload);\n    },\n    evening: (state, action) => {\n      state.value = state.dishesData.filter(e => e.DayPart === DayPart.Dinner && e.resturantId === action.payload);\n    },\n    topThreePopularDish: state => {\n      state.value = state.dishesData.sort((a, b) => a.visited - b.visited).slice(0, 3);\n    }\n  }\n});\nexport const {\n  morning,\n  noon,\n  evening,\n  topThreePopularDish\n} = dishSlice.actions;\nexport default dishSlice.reducer;","map":{"version":3,"names":["createSlice","axios","DayPart","data","serverAddress","filterByDayPart","restaurantId","post","console","log","error","dishSlice","name","initialState","dishesData","dishes","value","reducers","morning","state","action","payload","id","noon","filter","e","Launch","resturantId","evening","Dinner","topThreePopularDish","sort","a","b","visited","slice","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/data/dishSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { DayPart } from \"../component/Types/enums/DishEnums\";\r\nimport { IDish } from \"../component/Types/Interfaces/IDishCard\";\r\nimport data from \"./resturants.json\";\r\nimport { serverAddress } from \"./store\";\r\nexport interface IDishesState {\r\n  value: IDish[];\r\n}\r\nexport interface IDIshAction {\r\n  payload: {\r\n    id: string;\r\n    DayPart: DayPart;\r\n  };\r\n  type: string;\r\n}\r\nconst filterByDayPart = async (restaurantId: string, DayPart: DayPart) => {\r\n  try {\r\n    let data = await axios.post(serverAddress + \"/dishes\", {\r\n      restaurantId: restaurantId,\r\n      DayPart: DayPart,\r\n    });\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const dishSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    dishesData: data.dishes,\r\n    value: data.dishes,\r\n  },\r\n  reducers: {\r\n    morning: (state, action: IDIshAction) => {\r\n      filterByDayPart(action.payload.id, action.payload.DayPart);\r\n    },\r\n    noon: (state, action) => {\r\n      state.value = state.dishesData.filter(\r\n        (e) => e.DayPart === DayPart.Launch && e.resturantId === action.payload\r\n      );\r\n    },\r\n    evening: (state, action) => {\r\n      state.value = state.dishesData.filter(\r\n        (e) => e.DayPart === DayPart.Dinner && e.resturantId === action.payload\r\n      );\r\n    },\r\n    topThreePopularDish: (state) => {\r\n      state.value = state.dishesData\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { morning, noon, evening, topThreePopularDish } =\r\n  dishSlice.actions;\r\n\r\nexport default dishSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,oCAAoC;AAE5D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,aAAa,QAAQ,SAAS;AAWvC,MAAMC,eAAe,GAAG,OAAOC,YAAoB,EAAEJ,OAAgB,KAAK;EACxE,IAAI;IACF,IAAIC,IAAI,GAAG,MAAMF,KAAK,CAACM,IAAI,CAACH,aAAa,GAAG,SAAS,EAAE;MACrDE,YAAY,EAAEA,YAAY;MAC1BJ,OAAO,EAAEA;IACX,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,UAAU,EAAEX,IAAI,CAACY,MAAM;IACvBC,KAAK,EAAEb,IAAI,CAACY;EACd,CAAC;EACDE,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAmB,KAAK;MACvCf,eAAe,CAACe,MAAM,CAACC,OAAO,CAACC,EAAE,EAAEF,MAAM,CAACC,OAAO,CAACnB,OAAO,CAAC;IAC5D,CAAC;IACDqB,IAAI,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvBD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,UAAU,CAACU,MAAM,CAClCC,CAAC,IAAKA,CAAC,CAACvB,OAAO,KAAKA,OAAO,CAACwB,MAAM,IAAID,CAAC,CAACE,WAAW,KAAKP,MAAM,CAACC,OAAO,CACxE;IACH,CAAC;IACDO,OAAO,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,UAAU,CAACU,MAAM,CAClCC,CAAC,IAAKA,CAAC,CAACvB,OAAO,KAAKA,OAAO,CAAC2B,MAAM,IAAIJ,CAAC,CAACE,WAAW,KAAKP,MAAM,CAACC,OAAO,CACxE;IACH,CAAC;IACDS,mBAAmB,EAAGX,KAAK,IAAK;MAC9BA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,UAAU,CAC3BiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,CAAC,CACrCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEjB,OAAO;EAAEK,IAAI;EAAEK,OAAO;EAAEE;AAAoB,CAAC,GAC1DnB,SAAS,CAACyB,OAAO;AAEnB,eAAezB,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"./resturants.json\";\nconst yearInMilliseconds = 31536000000;\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    restaurantsData: data.restaurants,\n    value: []\n  },\n  reducers: {\n    all: state => {\n      state.value = state.restaurantsData;\n    },\n    newRestaurants: state => {\n      const currentDate = new Date().getTime();\n      state.value = state.restaurantsData.filter(e => {\n        return new Date(e.startDate).getTime() === currentDate - yearInMilliseconds;\n      });\n    },\n    openRestaurants: state => {\n      const currentHour = new Date().getHours();\n      state.value = state.restaurantsData.filter(e => {\n        return e.openHour < currentHour && currentHour < e.closeHour;\n      });\n    }\n  }\n});\nexport const {\n  all,\n  newRestaurants,\n  openRestaurants\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","yearInMilliseconds","restaurantsSlice","name","initialState","restaurantsData","restaurants","value","reducers","all","state","newRestaurants","currentDate","Date","getTime","filter","e","startDate","openRestaurants","currentHour","getHours","openHour","closeHour","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/data/resturantSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IRestaurant from \"../component/Types/Interfaces/IRestaurant\";\r\nimport data from \"./resturants.json\";\r\nconst yearInMilliseconds = 31536000000;\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    restaurantsData: data.restaurants,\r\n    value: [] as IRestaurant[],\r\n  },\r\n  reducers: {\r\n    all: (state) => {\r\n      state.value = state.restaurantsData;\r\n    },\r\n    newRestaurants: (state) => {\r\n      const currentDate = new Date().getTime();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return (\r\n          new Date(e.startDate).getTime() === currentDate - yearInMilliseconds\r\n        );\r\n      });\r\n    },\r\n    openRestaurants: (state) => {\r\n      const currentHour = new Date().getHours();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return e.openHour < currentHour && currentHour < e.closeHour;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { all, newRestaurants, openRestaurants } =\r\n  restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,MAAMC,kBAAkB,GAAG,WAAW;AAEtC,OAAO,MAAMC,gBAAgB,GAAGH,WAAW,CAAC;EAC1CI,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,eAAe,EAAEL,IAAI,CAACM,WAAW;IACjCC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,EAAGC,KAAK,IAAK;MACdA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,eAAe;IACrC,CAAC;IACDM,cAAc,EAAGD,KAAK,IAAK;MACzB,MAAME,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MACxCJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,eAAe,CAACU,MAAM,CAAEC,CAAC,IAAK;QAChD,OACE,IAAIH,IAAI,CAACG,CAAC,CAACC,SAAS,CAAC,CAACH,OAAO,EAAE,KAAKF,WAAW,GAAGX,kBAAkB;MAExE,CAAC,CAAC;IACJ,CAAC;IACDiB,eAAe,EAAGR,KAAK,IAAK;MAC1B,MAAMS,WAAW,GAAG,IAAIN,IAAI,EAAE,CAACO,QAAQ,EAAE;MACzCV,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,eAAe,CAACU,MAAM,CAAEC,CAAC,IAAK;QAChD,OAAOA,CAAC,CAACK,QAAQ,GAAGF,WAAW,IAAIA,WAAW,GAAGH,CAAC,CAACM,SAAS;MAC9D,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,GAAG;EAAEE,cAAc;EAAEO;AAAgB,CAAC,GACnDhB,gBAAgB,CAACqB,OAAO;AAE1B,eAAerB,gBAAgB,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
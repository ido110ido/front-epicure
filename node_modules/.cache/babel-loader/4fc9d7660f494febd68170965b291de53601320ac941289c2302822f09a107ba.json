{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\full stack curse\\\\epicure\\\\front\\\\src\\\\component\\\\Pages\\\\ProfileResturantPage\\\\ProfileResturantPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { setDishes } from \"../../../data/dishSlicer\";\nimport { profileRestaurant } from \"../../../data/resturantSlicer\";\nimport CardDish from \"../../Cards/CardDish/CardDish\";\nimport { CleanButtonWithAnimation } from \"../../Styled_Components/Buttons\";\nimport { FilterButtonLine } from \"../../Styled_Components/filterButtonLine\";\nimport { GridCards } from \"../../Styled_Components/gridPagesStyles\";\nimport { DayPart } from \"../../Types/enums/DishEnums\";\nimport \"./RestaurantProfilePages.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RestaurantProfilePages = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const restaurantProfile = useSelector(state => state.restaurants.value);\n  const dishes = useSelector(state => state.dishes.value);\n  const chef = useSelector(state => state.chefs.chefName);\n  const [currentTab, setCurrentTab] = useState(\"Breakfast\");\n  const checkIfOpen = () => {\n    const currentHour = new Date().getHours();\n    return restaurantProfile[0].openHour <= currentHour && currentHour < restaurantProfile[0].closeHour;\n  };\n  useEffect(() => {\n    dispatch(profileRestaurant(id));\n    dispatch(setDishes({\n      resturantId: id,\n      dayPart: DayPart.Breakfast\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RestaurantProfilePages\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"restaurantPic\",\n      src: restaurantProfile[0].img,\n      alt: \"restaurant image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: restaurantProfile[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: chef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurantOpenStatus\",\n      children: checkIfOpen() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\\\\imges\\\\icons\\\\clock-icon.svg\",\n          alt: \"clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Open now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Open between\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [restaurantProfile[0].openHour, \":00 -\", restaurantProfile[0].closeHour, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtonLine, {\n      style: {\n        fontSize: \"24px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CleanButtonWithAnimation, {\n        isFixed: \"Breakfast\" === currentTab,\n        onClick: value => {\n          setCurrentTab(value.currentTarget.innerText);\n          dispatch(setDishes({\n            id: id,\n            dayPart: DayPart.Breakfast\n          }));\n        },\n        children: \"Breakfast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CleanButtonWithAnimation, {\n        isFixed: \"Launch\" === currentTab,\n        onClick: value => {\n          setCurrentTab(value.currentTarget.innerText);\n          dispatch(setDishes({\n            id: id,\n            dayPart: DayPart.Launch\n          }));\n        },\n        children: \"Launch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CleanButtonWithAnimation, {\n        isFixed: \"Dinner\" === currentTab,\n        onClick: value => {\n          setCurrentTab(value.currentTarget.innerText);\n          dispatch(setDishes({\n            id: id,\n            dayPart: DayPart.Dinner\n          }));\n        },\n        children: \"Dinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridCards, {\n      cellSize: 272,\n      children: dishes.map((dish, index) => {\n        return /*#__PURE__*/_jsxDEV(CardDish, {\n          dishData: dish,\n          isSmall: true,\n          restaurantName: restaurantProfile[0].name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantProfilePages, \"TeiMeMDoqG3Ep6QxexZY5wRhe2w=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = RestaurantProfilePages;\nexport default RestaurantProfilePages;\nvar _c;\n$RefreshReg$(_c, \"RestaurantProfilePages\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useParams","setDishes","profileRestaurant","CardDish","CleanButtonWithAnimation","FilterButtonLine","GridCards","DayPart","RestaurantProfilePages","id","dispatch","restaurantProfile","state","restaurants","value","dishes","chef","chefs","chefName","currentTab","setCurrentTab","checkIfOpen","currentHour","Date","getHours","openHour","closeHour","resturantId","dayPart","Breakfast","img","name","fontSize","currentTarget","innerText","Launch","Dinner","map","dish","index"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/component/Pages/ProfileResturantPage/ProfileResturantPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavigateFunction, useNavigate, useParams } from \"react-router-dom\";\r\nimport { setDishes } from \"../../../data/dishSlicer\";\r\nimport { all, profileRestaurant } from \"../../../data/resturantSlicer\";\r\nimport { RootState } from \"../../../data/store\";\r\nimport CardDish from \"../../Cards/CardDish/CardDish\";\r\nimport { CleanButtonWithAnimation } from \"../../Styled_Components/Buttons\";\r\nimport { FilterButtonLine } from \"../../Styled_Components/filterButtonLine\";\r\nimport { GridCards } from \"../../Styled_Components/gridPagesStyles\";\r\nimport { DayPart } from \"../../Types/enums/DishEnums\";\r\nimport { IDish } from \"../../Types/Interfaces/IDishCard\";\r\nimport \"./RestaurantProfilePages.css\";\r\nconst RestaurantProfilePages = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const dispatch = useDispatch();\r\n\r\n  const restaurantProfile = useSelector(\r\n    (state: RootState) => state.restaurants.value\r\n  );\r\n  const dishes = useSelector((state: RootState) => state.dishes.value);\r\n  const chef = useSelector((state: RootState) => state.chefs.chefName);\r\n  const [currentTab, setCurrentTab] = useState<string>(\"Breakfast\");\r\n  const checkIfOpen = (): boolean => {\r\n    const currentHour = new Date().getHours();\r\n    return (\r\n      restaurantProfile[0].openHour <= currentHour &&\r\n      currentHour < restaurantProfile[0].closeHour\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    dispatch(profileRestaurant(id));\r\n    dispatch(setDishes({ resturantId: id, dayPart: DayPart.Breakfast }));\r\n  }, []);\r\n  return (\r\n    <div className=\"RestaurantProfilePages\">\r\n      <img\r\n        className=\"restaurantPic\"\r\n        src={restaurantProfile[0].img}\r\n        alt=\"restaurant image\"\r\n      />\r\n      <h3>{restaurantProfile[0].name}</h3>\r\n      <span>{chef}</span>\r\n      <div className=\"restaurantOpenStatus\">\r\n        {checkIfOpen() ? (\r\n          <>\r\n            <img src=\"\\imges\\icons\\clock-icon.svg\" alt=\"clock\" />\r\n            <span>Open now</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>Open between</span>\r\n            <span>\r\n              {restaurantProfile[0].openHour}:00 -\r\n              {restaurantProfile[0].closeHour}:00\r\n            </span>\r\n          </>\r\n        )}\r\n      </div>\r\n      <FilterButtonLine style={{ fontSize: \"24px\" }}>\r\n        <CleanButtonWithAnimation\r\n          isFixed={\"Breakfast\" === currentTab}\r\n          onClick={(value) => {\r\n            setCurrentTab(value.currentTarget.innerText);\r\n            dispatch(setDishes({ id: id, dayPart: DayPart.Breakfast }));\r\n          }}\r\n        >\r\n          Breakfast\r\n        </CleanButtonWithAnimation>\r\n        <CleanButtonWithAnimation\r\n          isFixed={\"Launch\" === currentTab}\r\n          onClick={(value) => {\r\n            setCurrentTab(value.currentTarget.innerText);\r\n            dispatch(setDishes({ id: id, dayPart: DayPart.Launch }));\r\n          }}\r\n        >\r\n          Launch\r\n        </CleanButtonWithAnimation>\r\n        <CleanButtonWithAnimation\r\n          isFixed={\"Dinner\" === currentTab}\r\n          onClick={(value) => {\r\n            setCurrentTab(value.currentTarget.innerText);\r\n            dispatch(setDishes({ id: id, dayPart: DayPart.Dinner }));\r\n          }}\r\n        >\r\n          Dinner\r\n        </CleanButtonWithAnimation>\r\n      </FilterButtonLine>\r\n      <GridCards cellSize={272}>\r\n        {dishes.map((dish: IDish, index: number) => {\r\n          return (\r\n            <CardDish\r\n              dishData={dish}\r\n              key={index}\r\n              isSmall={true}\r\n              restaurantName={restaurantProfile[0].name}\r\n            />\r\n          );\r\n        })}\r\n      </GridCards>\r\n    </div>\r\n  );\r\n};\r\nexport default RestaurantProfilePages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
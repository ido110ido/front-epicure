{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\full stack curse\\\\epicure\\\\src\\\\component\\\\Pages\\\\ResturantsPage\\\\ResturantsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FilterButtonLine, FilterRengeLine as FilterRenegeLine } from \"../../Styled_Components/filterButtonLine\";\nimport { GridCards, PageCenterStyle } from \"../../Styled_Components/gridPagesStyles\";\nimport data from \"../../../data/resturants.json\";\nimport CardResturant from \"../../Cards/CardResturant/CardResturant\";\nimport { SwitchButton } from \"../../Styled_Components/Buttons\";\nimport FilterButtom from \"../../Styled_Components/FilterButtom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResturantsPage = () => {\n  _s();\n  const restaurants = useSelector(state => state.restaurants);\n  const [withFilter, setFilter] = useState(\"all\");\n  const getDataFromButtonFilter = state => {\n    setFilter(state);\n  };\n  return /*#__PURE__*/_jsxDEV(PageCenterStyle, {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"all\",\n        bold: withFilter === \"all\",\n        onClick: value => {\n          getDataFromButtonFilter(value.target.name);\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"New\",\n        bold: withFilter === \"New\",\n        onClick: value => {\n          getDataFromButtonFilter(value.target.name);\n        },\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"MostPopular\",\n        bold: withFilter === \"MostPopular\",\n        onClick: value => {\n          getDataFromButtonFilter(value.target.name);\n        },\n        children: \"Most Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"OpenNow\",\n        bold: withFilter === \"OpenNow\",\n        onClick: value => {\n          console.log(value);\n          getDataFromButtonFilter(value.target.name);\n        },\n        children: \"Open Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"MapView\",\n        bold: withFilter === \"MapView\",\n        onClick: value => {\n          getDataFromButtonFilter(value.target.name);\n        },\n        children: \"Map View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterRenegeLine, {\n      children: [/*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Price Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Distance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridCards, {\n      repastCell: 3,\n      children: restaurants.map((restaurant, index) => {\n        let chef = data.chef.find(chef => chef._id === restaurant.chefId);\n        let name = (chef === null || chef === void 0 ? void 0 : chef.firstName) + \" \" + (chef === null || chef === void 0 ? void 0 : chef.lastName);\n        return /*#__PURE__*/_jsxDEV(CardResturant, {\n          resturantData: restaurant,\n          chef: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ResturantsPage, \"9xokiTKf1tvGHGKb0iLTVlGYLoc=\", false, function () {\n  return [useSelector];\n});\n_c = ResturantsPage;\nexport default ResturantsPage;\nvar _c;\n$RefreshReg$(_c, \"ResturantsPage\");","map":{"version":3,"names":["React","useState","FilterButtonLine","FilterRengeLine","FilterRenegeLine","GridCards","PageCenterStyle","data","CardResturant","SwitchButton","FilterButtom","useSelector","ResturantsPage","restaurants","state","withFilter","setFilter","getDataFromButtonFilter","value","target","name","console","log","map","restaurant","index","chef","find","_id","chefId","firstName","lastName"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/component/Pages/ResturantsPage/ResturantsPage.tsx"],"sourcesContent":["import React, { ReactElement, useState } from \"react\";\r\nimport {\r\n  FilterButtonLine,\r\n  FilterRengeLine as FilterRenegeLine,\r\n} from \"../../Styled_Components/filterButtonLine\";\r\nimport {\r\n  GridCards,\r\n  PageCenterStyle,\r\n} from \"../../Styled_Components/gridPagesStyles\";\r\nimport data from \"../../../data/resturants.json\";\r\nimport CardResturant from \"../../Cards/CardResturant/CardResturant\";\r\nimport { SwitchButton } from \"../../Styled_Components/Buttons\";\r\nimport FilterButtom from \"../../Styled_Components/FilterButtom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../data/store\";\r\n\r\nconst ResturantsPage = () => {\r\n  const restaurants = useSelector((state: RootState) => state.restaurants);\r\n  const [withFilter, setFilter] = useState(\"all\");\r\n  const getDataFromButtonFilter = (state: string) => {\r\n    setFilter(state);\r\n  };\r\n  return (\r\n    <PageCenterStyle>\r\n      <FilterButtonLine>\r\n        <SwitchButton\r\n          name=\"all\"\r\n          bold={withFilter === \"all\"}\r\n          onClick={(value: any) => {\r\n            getDataFromButtonFilter(value.target.name);\r\n          }}\r\n        >\r\n          All\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"New\"\r\n          bold={withFilter === \"New\"}\r\n          onClick={(value: any) => {\r\n            getDataFromButtonFilter(value.target.name);\r\n          }}\r\n        >\r\n          New\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MostPopular\"\r\n          bold={withFilter === \"MostPopular\"}\r\n          onClick={(value: any) => {\r\n            getDataFromButtonFilter(value.target.name);\r\n          }}\r\n        >\r\n          Most Popular\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"OpenNow\"\r\n          bold={withFilter === \"OpenNow\"}\r\n          onClick={(value: any) => {\r\n            console.log(value);\r\n\r\n            getDataFromButtonFilter(value.target.name);\r\n          }}\r\n        >\r\n          Open Now\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MapView\"\r\n          bold={withFilter === \"MapView\"}\r\n          onClick={(value: any) => {\r\n            getDataFromButtonFilter(value.target.name);\r\n          }}\r\n        >\r\n          Map View\r\n        </SwitchButton>\r\n      </FilterButtonLine>\r\n      <FilterRenegeLine>\r\n        <FilterButtom text={\"Price Range\"} />\r\n        <FilterButtom text={\"Distance\"} />\r\n        <FilterButtom text={\"Rating\"} />\r\n      </FilterRenegeLine>\r\n      <GridCards repastCell={3}>\r\n        {restaurants.map((restaurant, index) => {\r\n          let chef = data.chef.find((chef) => chef._id === restaurant.chefId);\r\n          let name: string = chef?.firstName + \" \" + chef?.lastName;\r\n          return <CardResturant resturantData={restaurant} chef={name} />;\r\n        })}\r\n      </GridCards>\r\n    </PageCenterStyle>\r\n  );\r\n};\r\nexport default ResturantsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\full stack curse\\\\epicure\\\\src\\\\component\\\\experiment\\\\popUp.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const Modal = (children: any) => {\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const handleOpen = () => setIsOpen(true);\n//   const handleClose = () => setIsOpen(false);\n\n//   return (\n//     <>\n//       <button onClick={handleOpen}>Open Modal</button>\n//       {isOpen && (\n//         <div\n//           style={{\n//             position: \"fixed\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             width: \"200px\",\n//             height: \"200px\",\n//             transform: \"translate(-50%, -50%)\",\n//             background: \"black \",\n//             padding: \"1rem\",\n//             border: \"1px solid black\",\n//           }}\n//         >\n//           <button onClick={handleClose}>Close</button>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default Modal;\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const modalRef = useRef(null);\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => setIsOpen(false);\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      handleClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClickOutside,\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: \"rgba(0, 0, 0, 0.5)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: modalRef,\n        style: {\n          background: \"white\",\n          padding: \"1rem\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Modal, \"p+m69T1CUwUiDbA2c0Hwg47Wjks=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useRef","Modal","children","isOpen","setIsOpen","modalRef","handleOpen","handleClose","handleClickOutside","event","current","contains","target","position","top","left","right","bottom","background","display","alignItems","justifyContent","padding","border"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/component/experiment/popUp.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const Modal = (children: any) => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const handleOpen = () => setIsOpen(true);\r\n//   const handleClose = () => setIsOpen(false);\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={handleOpen}>Open Modal</button>\r\n//       {isOpen && (\r\n//         <div\r\n//           style={{\r\n//             position: \"fixed\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             width: \"200px\",\r\n//             height: \"200px\",\r\n//             transform: \"translate(-50%, -50%)\",\r\n//             background: \"black \",\r\n//             padding: \"1rem\",\r\n//             border: \"1px solid black\",\r\n//           }}\r\n//         >\r\n//           <button onClick={handleClose}>Close</button>\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Modal;\r\n\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nconst Modal = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const modalRef = useRef(null);\r\n\r\n  const handleOpen = () => setIsOpen(true);\r\n  const handleClose = () => setIsOpen(false);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleOpen}>Open Modal</button>\r\n      {isOpen && (\r\n        <div\r\n          onClick={handleClickOutside}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            background: \"rgba(0, 0, 0, 0.5)\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            ref={modalRef}\r\n            style={{\r\n              background: \"white\",\r\n              padding: \"1rem\",\r\n              border: \"1px solid black\",\r\n            }}\r\n          >\r\n            <button onClick={handleClose}>Close</button>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAEhD,MAAMC,KAAK,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMM,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMM,UAAU,GAAG,MAAMF,SAAS,CAAC,IAAI,CAAC;EACxC,MAAMG,WAAW,GAAG,MAAMH,SAAS,CAAC,KAAK,CAAC;EAE1C,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIJ,QAAQ,CAACK,OAAO,IAAI,CAACL,QAAQ,CAACK,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MAChEL,WAAW,EAAE;IACf;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAED,UAAW;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,EAC/CH,MAAM,iBACL;MACE,OAAO,EAAEK,kBAAmB;MAC5B,KAAK,EAAE;QACLK,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTC,UAAU,EAAE,oBAAoB;QAChCC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA,uBAEF;QACE,GAAG,EAAEhB,QAAS;QACd,KAAK,EAAE;UACLa,UAAU,EAAE,OAAO;UACnBI,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE;QACV,CAAE;QAAA,wBAEF;UAAQ,OAAO,EAAEhB,WAAY;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS,EAC3CL,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QAET;EAAA,gBACA;AAEP,CAAC;AAAC,GA9CID,KAAK;AAAA,KAALA,KAAK;AAgDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\full stack curse\\\\epicure\\\\src\\\\component\\\\Pages\\\\ResturantsPage\\\\ResturantsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { FilterButtonLine, FilterRengeLine as FilterRenegeLine } from \"../../Styled_Components/filterButtonLine\";\nimport { GridCards, PageCenterStyle } from \"../../Styled_Components/gridPagesStyles\";\nimport CardResturant from \"../../Cards/CardResturant/CardResturant\";\nimport { SwitchButton } from \"../../Styled_Components/Buttons\";\nimport FilterButtom from \"../../Styled_Components/FilterButtom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { all, newRestaurants, openRestaurants, popularRestaurants } from \"../../../data/resturantSlicer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getChefName } from \"../../../data/chefSlicer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResturantsPage = () => {\n  _s();\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(all());\n  }, []);\n  const restaurants = useSelector(state => state.restaurants.value);\n  const chefName = useSelector(state => state.chefs.chefName);\n  const [withFilter, setFilter] = useState(\"all\");\n  return /*#__PURE__*/_jsxDEV(PageCenterStyle, {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtonLine, {\n      children: [/*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"all\",\n        bold: withFilter === \"all\",\n        onClick: value => {\n          dispatch(all());\n          setFilter(value.currentTarget.name);\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"New\",\n        bold: withFilter === \"New\",\n        onClick: value => {\n          dispatch(newRestaurants());\n          setFilter(value.currentTarget.name);\n        },\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"MostPopular\",\n        bold: withFilter === \"MostPopular\",\n        onClick: value => {\n          dispatch(popularRestaurants());\n          setFilter(value.currentTarget.name);\n        },\n        children: \"Most Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"OpenNow\",\n        bold: withFilter === \"OpenNow\",\n        onClick: value => {\n          dispatch(openRestaurants());\n          setFilter(value.currentTarget.name);\n        },\n        children: \"Open Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchButton, {\n        name: \"MapView\",\n        bold: withFilter === \"MapView\",\n        onClick: value => {\n          setFilter(value.currentTarget.name);\n        },\n        children: \"Map View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterRenegeLine, {\n      children: [/*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Price Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Distance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButtom, {\n        text: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridCards, {\n      repastCell: 3,\n      children: restaurants.map((restaurant, index) => {\n        dispatch(getChefName(restaurant.chefId));\n        return /*#__PURE__*/_jsxDEV(CardResturant, {\n          resturantData: restaurant,\n          chef: chefName,\n          onClick: () => {\n            dispatch(getChefName(restaurant.chefId));\n            navigation(`${restaurant._id}`);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ResturantsPage, \"U02Cc2S4naTWkignLhjJFXKzq+U=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = ResturantsPage;\nexport default ResturantsPage;\nvar _c;\n$RefreshReg$(_c, \"ResturantsPage\");","map":{"version":3,"names":["React","useEffect","useState","FilterButtonLine","FilterRengeLine","FilterRenegeLine","GridCards","PageCenterStyle","CardResturant","SwitchButton","FilterButtom","useDispatch","useSelector","all","newRestaurants","openRestaurants","popularRestaurants","useNavigate","getChefName","ResturantsPage","navigation","dispatch","restaurants","state","value","chefName","chefs","withFilter","setFilter","currentTarget","name","map","restaurant","index","chefId","_id"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/component/Pages/ResturantsPage/ResturantsPage.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\r\nimport {\r\n  FilterButtonLine,\r\n  FilterRengeLine as FilterRenegeLine,\r\n} from \"../../Styled_Components/filterButtonLine\";\r\nimport {\r\n  GridCards,\r\n  PageCenterStyle,\r\n} from \"../../Styled_Components/gridPagesStyles\";\r\nimport data from \"../../../data/resturants.json\";\r\nimport CardResturant from \"../../Cards/CardResturant/CardResturant\";\r\nimport { SwitchButton } from \"../../Styled_Components/Buttons\";\r\nimport FilterButtom from \"../../Styled_Components/FilterButtom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../data/store\";\r\nimport {\r\n  all,\r\n  newRestaurants,\r\n  openRestaurants,\r\n  popularRestaurants,\r\n} from \"../../../data/resturantSlicer\";\r\nimport { IRestaurant } from \"../../Types/Interfaces/IRestaurantCard\";\r\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\r\nimport { getChefName } from \"../../../data/chefSlicer\";\r\nconst ResturantsPage = () => {\r\n  const navigation: NavigateFunction = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(all());\r\n  }, []);\r\n  const restaurants = useSelector(\r\n    (state: RootState) => state.restaurants.value\r\n  );\r\n  const chefName = useSelector((state: RootState) => state.chefs.chefName);\r\n\r\n  const [withFilter, setFilter] = useState(\"all\");\r\n  return (\r\n    <PageCenterStyle>\r\n      <FilterButtonLine>\r\n        <SwitchButton\r\n          name=\"all\"\r\n          bold={withFilter === \"all\"}\r\n          onClick={(value: React.MouseEvent<HTMLButtonElement>) => {\r\n            dispatch(all());\r\n            setFilter(value.currentTarget.name);\r\n          }}\r\n        >\r\n          All\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"New\"\r\n          bold={withFilter === \"New\"}\r\n          onClick={(value: React.MouseEvent<HTMLButtonElement>) => {\r\n            dispatch(newRestaurants());\r\n            setFilter(value.currentTarget.name);\r\n          }}\r\n        >\r\n          New\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MostPopular\"\r\n          bold={withFilter === \"MostPopular\"}\r\n          onClick={(value: React.MouseEvent<HTMLButtonElement>) => {\r\n            dispatch(popularRestaurants());\r\n            setFilter(value.currentTarget.name);\r\n          }}\r\n        >\r\n          Most Popular\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"OpenNow\"\r\n          bold={withFilter === \"OpenNow\"}\r\n          onClick={(value: React.MouseEvent<HTMLButtonElement>) => {\r\n            dispatch(openRestaurants());\r\n            setFilter(value.currentTarget.name);\r\n          }}\r\n        >\r\n          Open Now\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MapView\"\r\n          bold={withFilter === \"MapView\"}\r\n          onClick={(value: React.MouseEvent<HTMLButtonElement>) => {\r\n            setFilter(value.currentTarget.name);\r\n          }}\r\n        >\r\n          Map View\r\n        </SwitchButton>\r\n      </FilterButtonLine>\r\n      <FilterRenegeLine>\r\n        <FilterButtom text={\"Price Range\"} />\r\n        <FilterButtom text={\"Distance\"} />\r\n        <FilterButtom text={\"Rating\"} />\r\n      </FilterRenegeLine>\r\n      <GridCards repastCell={3}>\r\n        {restaurants.map((restaurant: IRestaurant, index: number) => {\r\n          dispatch(getChefName(restaurant.chefId));\r\n\r\n          return (\r\n            <CardResturant\r\n              key={index}\r\n              resturantData={restaurant}\r\n              chef={chefName}\r\n              onClick={() => {\r\n                dispatch(getChefName(restaurant.chefId));\r\n                navigation(`${restaurant._id}`);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </GridCards>\r\n    </PageCenterStyle>\r\n  );\r\n};\r\nexport default ResturantsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import data from\"./resturants.json\";var yearInMilliseconds=31536000000;export var restaurantsSlice=createSlice({name:\"restaurants\",initialState:{restaurantsData:data.restaurants,value:data.restaurants,chefRestaurants:{}},reducers:{all:function all(state){state.value=state.restaurantsData;},newRestaurants:function newRestaurants(state){var currentDate=new Date().getTime();state.value=state.restaurantsData.filter(function(e){return new Date(e.startDate).getTime()>currentDate-yearInMilliseconds*2;});},openRestaurants:function openRestaurants(state){var currentHour=new Date().getHours();state.value=state.restaurantsData.filter(function(e){return e.openHour<=currentHour&&currentHour<e.closeHour;});},popularRestaurants:function popularRestaurants(state){var temp=state.restaurantsData;state.value=temp.sort(function(a,b){return a.visited-b.visited;}).slice(0,10);},topThreePopularRestaurants:function topThreePopularRestaurants(state){state.value=state.restaurantsData.sort(function(a,b){return a.visited-b.visited;}).slice(0,3);},filterByRating:function filterByRating(state,action){state.value=state.restaurantsData.filter(function(e){return action.payload.includes(e.rating);});},profileRestaurant:function profileRestaurant(state,action){state.value=state.restaurantsData.filter(function(e){return e._id===action.payload;});},chefRestaurant:function chefRestaurant(state,action){state.chefRestaurants=state.restaurantsData.filter(function(e){return e.chefId===action.payload;});}}});var _restaurantsSlice$act=restaurantsSlice.actions,all=_restaurantsSlice$act.all,newRestaurants=_restaurantsSlice$act.newRestaurants,openRestaurants=_restaurantsSlice$act.openRestaurants,popularRestaurants=_restaurantsSlice$act.popularRestaurants,filterByRating=_restaurantsSlice$act.filterByRating,topThreePopularRestaurants=_restaurantsSlice$act.topThreePopularRestaurants,profileRestaurant=_restaurantsSlice$act.profileRestaurant,chefRestaurant=_restaurantsSlice$act.chefRestaurant;export{all,newRestaurants,openRestaurants,popularRestaurants,filterByRating,topThreePopularRestaurants,profileRestaurant,chefRestaurant};export default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","yearInMilliseconds","restaurantsSlice","name","initialState","restaurantsData","restaurants","value","chefRestaurants","reducers","all","state","newRestaurants","currentDate","Date","getTime","filter","e","startDate","openRestaurants","currentHour","getHours","openHour","closeHour","popularRestaurants","temp","sort","a","b","visited","slice","topThreePopularRestaurants","filterByRating","action","payload","includes","rating","profileRestaurant","_id","chefRestaurant","chefId","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/data/resturantSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IRestaurant } from \"../component/Types/Interfaces/IRestaurantCard\";\r\nimport data from \"./resturants.json\";\r\nconst yearInMilliseconds = 31536000000;\r\nexport interface IRestaurantsState {\r\n  restaurantsData: IRestaurant[];\r\n  value: IRestaurant[];\r\n  chefRestaurants: IRestaurant[];\r\n}\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    restaurantsData: data.restaurants,\r\n    value: data.restaurants,\r\n    chefRestaurants: {},\r\n  },\r\n  reducers: {\r\n    all: (state) => {\r\n      state.value = state.restaurantsData;\r\n    },\r\n    newRestaurants: (state) => {\r\n      const currentDate = new Date().getTime();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return (\r\n          new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2\r\n        );\r\n      });\r\n    },\r\n    openRestaurants: (state) => {\r\n      const currentHour = new Date().getHours();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return e.openHour <= currentHour && currentHour < e.closeHour;\r\n      });\r\n    },\r\n    popularRestaurants: (state) => {\r\n      const temp = state.restaurantsData;\r\n      state.value = temp.sort((a, b) => a.visited - b.visited).slice(0, 10);\r\n    },\r\n    topThreePopularRestaurants: (state) => {\r\n      state.value = state.restaurantsData\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n    filterByRating: (state, action) => {\r\n      state.value = state.restaurantsData.filter((e) =>\r\n        action.payload.includes(e.rating)\r\n      );\r\n    },\r\n    profileRestaurant: (state, action) => {\r\n      state.value = state.restaurantsData.filter(\r\n        (e) => e._id === action.payload\r\n      );\r\n    },\r\n    chefRestaurant: (state, action) => {\r\n      state.chefRestaurants = state.restaurantsData.filter(\r\n        (e) => e.chefId === action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  all,\r\n  newRestaurants,\r\n  openRestaurants,\r\n  popularRestaurants,\r\n  filterByRating,\r\n  topThreePopularRestaurants,\r\n  profileRestaurant,\r\n  chefRestaurant,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAOC,KAAI,KAAM,mBAAmB,CACpC,GAAMC,mBAAkB,CAAG,WAAW,CAMtC,MAAO,IAAMC,iBAAgB,CAAGH,WAAW,CAAC,CAC1CI,IAAI,CAAE,aAAa,CACnBC,YAAY,CAAE,CACZC,eAAe,CAAEL,IAAI,CAACM,WAAW,CACjCC,KAAK,CAAEP,IAAI,CAACM,WAAW,CACvBE,eAAe,CAAE,CAAC,CACpB,CAAC,CACDC,QAAQ,CAAE,CACRC,GAAG,CAAE,aAACC,KAAK,CAAK,CACdA,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CACrC,CAAC,CACDO,cAAc,CAAE,wBAACD,KAAK,CAAK,CACzB,GAAME,YAAW,CAAG,GAAIC,KAAI,EAAE,CAACC,OAAO,EAAE,CACxCJ,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CAACW,MAAM,CAAC,SAACC,CAAC,CAAK,CAChD,MACE,IAAIH,KAAI,CAACG,CAAC,CAACC,SAAS,CAAC,CAACH,OAAO,EAAE,CAAGF,WAAW,CAAGZ,kBAAkB,CAAG,CAAC,CAE1E,CAAC,CAAC,CACJ,CAAC,CACDkB,eAAe,CAAE,yBAACR,KAAK,CAAK,CAC1B,GAAMS,YAAW,CAAG,GAAIN,KAAI,EAAE,CAACO,QAAQ,EAAE,CACzCV,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CAACW,MAAM,CAAC,SAACC,CAAC,CAAK,CAChD,MAAOA,EAAC,CAACK,QAAQ,EAAIF,WAAW,EAAIA,WAAW,CAAGH,CAAC,CAACM,SAAS,CAC/D,CAAC,CAAC,CACJ,CAAC,CACDC,kBAAkB,CAAE,4BAACb,KAAK,CAAK,CAC7B,GAAMc,KAAI,CAAGd,KAAK,CAACN,eAAe,CAClCM,KAAK,CAACJ,KAAK,CAAGkB,IAAI,CAACC,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAACE,OAAO,CAAGD,CAAC,CAACC,OAAO,GAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACvE,CAAC,CACDC,0BAA0B,CAAE,oCAACpB,KAAK,CAAK,CACrCA,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CAChCqB,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAACE,OAAO,CAAGD,CAAC,CAACC,OAAO,GAAC,CACrCC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAChB,CAAC,CACDE,cAAc,CAAE,wBAACrB,KAAK,CAAEsB,MAAM,CAAK,CACjCtB,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CAACW,MAAM,CAAC,SAACC,CAAC,QAC3CgB,OAAM,CAACC,OAAO,CAACC,QAAQ,CAAClB,CAAC,CAACmB,MAAM,CAAC,GAClC,CACH,CAAC,CACDC,iBAAiB,CAAE,2BAAC1B,KAAK,CAAEsB,MAAM,CAAK,CACpCtB,KAAK,CAACJ,KAAK,CAAGI,KAAK,CAACN,eAAe,CAACW,MAAM,CACxC,SAACC,CAAC,QAAKA,EAAC,CAACqB,GAAG,GAAKL,MAAM,CAACC,OAAO,GAChC,CACH,CAAC,CACDK,cAAc,CAAE,wBAAC5B,KAAK,CAAEsB,MAAM,CAAK,CACjCtB,KAAK,CAACH,eAAe,CAAGG,KAAK,CAACN,eAAe,CAACW,MAAM,CAClD,SAACC,CAAC,QAAKA,EAAC,CAACuB,MAAM,GAAKP,MAAM,CAACC,OAAO,GACnC,CACH,CACF,CACF,CAAC,CAAC,CAEK,0BASHhC,gBAAgB,CAACuC,OAAO,CAR1B/B,GAAG,uBAAHA,GAAG,CACHE,cAAc,uBAAdA,cAAc,CACdO,eAAe,uBAAfA,eAAe,CACfK,kBAAkB,uBAAlBA,kBAAkB,CAClBQ,cAAc,uBAAdA,cAAc,CACdD,0BAA0B,uBAA1BA,0BAA0B,CAC1BM,iBAAiB,uBAAjBA,iBAAiB,CACjBE,cAAc,uBAAdA,cAAc,CACa,yIAE7B,cAAerC,iBAAgB,CAACwC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
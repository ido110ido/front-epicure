{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst getDishData = async () => {\n  return await fetch(\"http://localhost:8000/dishes\").then(response => response.json()).then(data => {\n    return data.data;\n  }).catch(error => {\n    console.error(\"Error getting dishes data:\", error);\n  });\n};\nconst dishesData = await getDishData();\n\n// const filterDishesByDayPart = async (\n//   restaurantId: string,\n//   dayPart: DayPart\n// ) => {\n//   try {\n//     const { data } = await axios.post(\"http://localhost:8000/dishes\", {\n//       resturantId: restaurantId,\n//       DayPart: dayPart,\n//     });\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//     return [];\n//   }\n// };\n\n// export const fetchDishesByDayPart =\n//   (restaurantId: string, dayPart: DayPart) =>\n//   async (dispatch: Dispatch<AnyAction>) => {\n//     console.log(restaurantId, dayPart);\n//     const dishes: IDish[] = await filterDishesByDayPart(restaurantId, dayPart);\n//     dispatch(setDishes(dishes));\n//   };\n\nexport const dishSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    setDishes: (state, action) => {\n      const {\n        resturantId,\n        DayPart\n      } = action.payload;\n      state.value = dishesData.filter(dish => dish.DayPart === DayPart && dish.resturantId === resturantId);\n    },\n    topThreePopularDish: state => {\n      state.value = dishesData.sort((a, b) => a.visited - b.visited).slice(0, 3);\n    }\n  }\n});\nexport const {\n  setDishes,\n  topThreePopularDish\n} = dishSlice.actions;\nexport default dishSlice.reducer;","map":{"version":3,"names":["createSlice","getDishData","fetch","then","response","json","data","catch","error","console","dishesData","dishSlice","name","initialState","value","reducers","setDishes","state","action","resturantId","DayPart","payload","filter","dish","topThreePopularDish","sort","a","b","visited","slice","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/data/dishSlicer.tsx"],"sourcesContent":["import {\r\n  AnyAction,\r\n  createSlice,\r\n  Dispatch,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { IDish } from \"../component/Types/Interfaces/IDishCard\";\r\nexport interface IDishesState {\r\n  value: IDish[];\r\n}\r\nconst getDishData = async () => {\r\n  return await fetch(\"http://localhost:8000/dishes\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error getting dishes data:\", error);\r\n    });\r\n};\r\nconst dishesData: IDish[] = await getDishData();\r\n\r\n// const filterDishesByDayPart = async (\r\n//   restaurantId: string,\r\n//   dayPart: DayPart\r\n// ) => {\r\n//   try {\r\n//     const { data } = await axios.post(\"http://localhost:8000/dishes\", {\r\n//       resturantId: restaurantId,\r\n//       DayPart: dayPart,\r\n//     });\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     return [];\r\n//   }\r\n// };\r\n\r\n// export const fetchDishesByDayPart =\r\n//   (restaurantId: string, dayPart: DayPart) =>\r\n//   async (dispatch: Dispatch<AnyAction>) => {\r\n//     console.log(restaurantId, dayPart);\r\n//     const dishes: IDish[] = await filterDishesByDayPart(restaurantId, dayPart);\r\n//     dispatch(setDishes(dishes));\r\n//   };\r\n\r\nexport const dishSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    value: [] as IDish[],\r\n  },\r\n  reducers: {\r\n    setDishes: (state, action) => {\r\n      const { resturantId, DayPart } = action.payload;\r\n      state.value = dishesData.filter(\r\n        (dish) => dish.DayPart === DayPart && dish.resturantId === resturantId\r\n      );\r\n    },\r\n    topThreePopularDish: (state) => {\r\n      state.value = dishesData\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDishes, topThreePopularDish } = dishSlice.actions;\r\n\r\nexport default dishSlice.reducer;\r\n"],"mappings":"AAAA,SAEEA,WAAW,QAGN,kBAAkB;AAKzB,MAAMC,WAAW,GAAG,YAAY;EAC9B,OAAO,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAC/CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd,OAAOA,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD,CAAC,CAAC;AACN,CAAC;AACD,MAAME,UAAmB,GAAG,MAAMT,WAAW,EAAE;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMU,SAAS,GAAGX,WAAW,CAAC;EACnCY,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAM;QAAEC,WAAW;QAAEC;MAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC/CJ,KAAK,CAACH,KAAK,GAAGJ,UAAU,CAACY,MAAM,CAC5BC,IAAI,IAAKA,IAAI,CAACH,OAAO,KAAKA,OAAO,IAAIG,IAAI,CAACJ,WAAW,KAAKA,WAAW,CACvE;IACH,CAAC;IACDK,mBAAmB,EAAGP,KAAK,IAAK;MAC9BA,KAAK,CAACH,KAAK,GAAGJ,UAAU,CACrBe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,CAAC,CACrCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,SAAS;EAAEQ;AAAoB,CAAC,GAAGb,SAAS,CAACmB,OAAO;AAEnE,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
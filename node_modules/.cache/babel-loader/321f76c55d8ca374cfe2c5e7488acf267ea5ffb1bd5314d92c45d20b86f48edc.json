{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/full stack curse/epicure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";export var orderSlice=createSlice({name:\"order\",initialState:{value:[]},reducers:{addDishToOrder:function addDishToOrder(state,action){var isSameRestaurant=state.value.every(function(dish){return dish.restaurantId===action.payload.restaurantId;})||state.value.length===0;if(isSameRestaurant){state.value=[].concat(_toConsumableArray(state.value),[action.payload]);}else{throw new Error(\"Not the same restaurant\");}},cleanOrder:function cleanOrder(state){state.value=[];}}});var _orderSlice$actions=orderSlice.actions,addDishToOrder=_orderSlice$actions.addDishToOrder,cleanOrder=_orderSlice$actions.cleanOrder;export{addDishToOrder,cleanOrder};export default orderSlice.reducer;","map":{"version":3,"names":["createSlice","orderSlice","name","initialState","value","reducers","addDishToOrder","state","action","isSameRestaurant","every","dish","restaurantId","payload","length","Error","cleanOrder","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/data/orderSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IDishOrder } from \"../component/Types/Interfaces/IDishCard\";\r\n\r\nexport interface IOrderState {\r\n  value: IDishOrder[];\r\n}\r\n\r\nexport const orderSlice = createSlice({\r\n  name: \"order\",\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    addDishToOrder: (\r\n      state: { value: IDishOrder[] },\r\n      action: { payload: IDishOrder }\r\n    ) => {\r\n      const isSameRestaurant =\r\n        state.value.every(\r\n          (dish) => dish.restaurantId === action.payload.restaurantId\r\n        ) || state.value.length === 0;\r\n\r\n      if (isSameRestaurant) {\r\n        state.value = [...state.value, action.payload];\r\n      } else {\r\n        throw new Error(\"Not the same restaurant\");\r\n      }\r\n    },\r\n    cleanOrder: (state: { value: IDishOrder[] }) => {\r\n      state.value = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addDishToOrder, cleanOrder } = orderSlice.actions;\r\n\r\nexport default orderSlice.reducer;\r\n"],"mappings":"iNAAA,OAASA,WAAW,KAAQ,kBAAkB,CAO9C,MAAO,IAAMC,WAAU,CAAGD,WAAW,CAAC,CACpCE,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACZC,KAAK,CAAE,EACT,CAAC,CACDC,QAAQ,CAAE,CACRC,cAAc,CAAE,wBACdC,KAA8B,CAC9BC,MAA+B,CAC5B,CACH,GAAMC,iBAAgB,CACpBF,KAAK,CAACH,KAAK,CAACM,KAAK,CACf,SAACC,IAAI,QAAKA,KAAI,CAACC,YAAY,GAAKJ,MAAM,CAACK,OAAO,CAACD,YAAY,GAC5D,EAAIL,KAAK,CAACH,KAAK,CAACU,MAAM,GAAK,CAAC,CAE/B,GAAIL,gBAAgB,CAAE,CACpBF,KAAK,CAACH,KAAK,8BAAOG,KAAK,CAACH,KAAK,GAAEI,MAAM,CAACK,OAAO,EAAC,CAChD,CAAC,IAAM,CACL,KAAM,IAAIE,MAAK,CAAC,yBAAyB,CAAC,CAC5C,CACF,CAAC,CACDC,UAAU,CAAE,oBAACT,KAA8B,CAAK,CAC9CA,KAAK,CAACH,KAAK,CAAG,EAAE,CAClB,CACF,CACF,CAAC,CAAC,CAEK,wBAAuCH,UAAU,CAACgB,OAAO,CAAjDX,cAAc,qBAAdA,cAAc,CAAEU,UAAU,qBAAVA,UAAU,CAAwB,kCAEjE,cAAef,WAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/OneDrive/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/full stack curse/epicure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{SwitchButton}from\"../../Styled_Components/Buttons\";import{FilterButtonLine}from\"../../Styled_Components/filterButtonLine\";import{GridCards,PageCenterStyle}from\"../../Styled_Components/gridPagesStyles\";import ChefCard from\"../../Cards/ChefCard/ChefCard\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{allChefs,newChefs,popularChefs}from\"../../../data/chefSlicer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChafPage=function ChafPage(){var dispatch=useDispatch();useEffect(function(){dispatch(allChefs());},[]);var chefs=useSelector(function(state){return state.chefs.value;});var _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),withFilter=_useState2[0],setFilter=_useState2[1];return/*#__PURE__*/_jsxs(PageCenterStyle,{children:[/*#__PURE__*/_jsxs(FilterButtonLine,{children:[/*#__PURE__*/_jsx(SwitchButton,{name:\"all\",bold:withFilter===\"all\",onClick:function onClick(value){setFilter(value.target.name);dispatch(allChefs());},children:\"All\"}),/*#__PURE__*/_jsx(SwitchButton,{name:\"New\",bold:withFilter===\"New\",onClick:function onClick(value){setFilter(value.target.name);dispatch(newChefs());},children:\"New\"}),/*#__PURE__*/_jsx(SwitchButton,{name:\"MostViewed\",bold:withFilter===\"MostViewed\",onClick:function onClick(value){setFilter(value.target.name);dispatch(popularChefs());},children:\"Most Viewed\"})]}),/*#__PURE__*/_jsx(GridCards,{cellSize:478,children:chefs.map(function(chef){return/*#__PURE__*/_jsx(ChefCard,{chefData:chef});})})]});};export default ChafPage;","map":{"version":3,"names":["SwitchButton","FilterButtonLine","GridCards","PageCenterStyle","ChefCard","useEffect","useState","useDispatch","useSelector","allChefs","newChefs","popularChefs","ChafPage","dispatch","chefs","state","value","withFilter","setFilter","target","name","map","chef"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/src/component/Pages/ChefPage/ChefPage.tsx"],"sourcesContent":["import { SwitchButton } from \"../../Styled_Components/Buttons\";\r\nimport { FilterButtonLine } from \"../../Styled_Components/filterButtonLine\";\r\nimport {\r\n  GridCards,\r\n  PageCenterStyle,\r\n} from \"../../Styled_Components/gridPagesStyles\";\r\nimport data from \"../../../data/resturants.json\";\r\nimport ChefCard from \"../../Cards/ChefCard/ChefCard\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../data/store\";\r\nimport { allChefs, newChefs, popularChefs } from \"../../../data/chefSlicer\";\r\nconst ChafPage = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(allChefs());\r\n  }, []);\r\n  const chefs = useSelector((state: RootState) => state.chefs.value);\r\n  const [withFilter, setFilter] = useState(\"all\");\r\n  return (\r\n    <PageCenterStyle>\r\n      <FilterButtonLine>\r\n        <SwitchButton\r\n          name=\"all\"\r\n          bold={withFilter === \"all\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(allChefs());\r\n          }}\r\n        >\r\n          All\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"New\"\r\n          bold={withFilter === \"New\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(newChefs());\r\n          }}\r\n        >\r\n          New\r\n        </SwitchButton>\r\n        <SwitchButton\r\n          name=\"MostViewed\"\r\n          bold={withFilter === \"MostViewed\"}\r\n          onClick={(value: any) => {\r\n            setFilter(value.target.name);\r\n            dispatch(popularChefs());\r\n          }}\r\n        >\r\n          Most Viewed\r\n        </SwitchButton>\r\n      </FilterButtonLine>\r\n      <GridCards cellSize={478}>\r\n        {chefs.map((chef) => {\r\n          return <ChefCard chefData={chef} />;\r\n        })}\r\n      </GridCards>\r\n    </PageCenterStyle>\r\n  );\r\n};\r\nexport default ChafPage;\r\n"],"mappings":"yMAAA,OAASA,YAAY,KAAQ,iCAAiC,CAC9D,OAASC,gBAAgB,KAAQ,0CAA0C,CAC3E,OACEC,SAAS,CACTC,eAAe,KACV,yCAAyC,CAEhD,MAAOC,SAAQ,KAAM,+BAA+B,CACpD,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,QAAQ,CAAEC,QAAQ,CAAEC,YAAY,KAAQ,0BAA0B,CAAC,wFAC5E,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrB,GAAMC,SAAQ,CAAGN,WAAW,EAAE,CAC9BF,SAAS,CAAC,UAAM,CACdQ,QAAQ,CAACJ,QAAQ,EAAE,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CACN,GAAMK,MAAK,CAAGN,WAAW,CAAC,SAACO,KAAgB,QAAKA,MAAK,CAACD,KAAK,CAACE,KAAK,GAAC,CAClE,cAAgCV,QAAQ,CAAC,KAAK,CAAC,wCAAxCW,UAAU,eAAEC,SAAS,eAC5B,mBACE,MAAC,eAAe,yBACd,MAAC,gBAAgB,yBACf,KAAC,YAAY,EACX,IAAI,CAAC,KAAK,CACV,IAAI,CAAED,UAAU,GAAK,KAAM,CAC3B,OAAO,CAAE,iBAACD,KAAU,CAAK,CACvBE,SAAS,CAACF,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,CAC5BP,QAAQ,CAACJ,QAAQ,EAAE,CAAC,CACtB,CAAE,UACH,KAED,EAAe,cACf,KAAC,YAAY,EACX,IAAI,CAAC,KAAK,CACV,IAAI,CAAEQ,UAAU,GAAK,KAAM,CAC3B,OAAO,CAAE,iBAACD,KAAU,CAAK,CACvBE,SAAS,CAACF,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,CAC5BP,QAAQ,CAACH,QAAQ,EAAE,CAAC,CACtB,CAAE,UACH,KAED,EAAe,cACf,KAAC,YAAY,EACX,IAAI,CAAC,YAAY,CACjB,IAAI,CAAEO,UAAU,GAAK,YAAa,CAClC,OAAO,CAAE,iBAACD,KAAU,CAAK,CACvBE,SAAS,CAACF,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,CAC5BP,QAAQ,CAACF,YAAY,EAAE,CAAC,CAC1B,CAAE,UACH,aAED,EAAe,GACE,cACnB,KAAC,SAAS,EAAC,QAAQ,CAAE,GAAI,UACtBG,KAAK,CAACO,GAAG,CAAC,SAACC,IAAI,CAAK,CACnB,mBAAO,KAAC,QAAQ,EAAC,QAAQ,CAAEA,IAAK,EAAG,CACrC,CAAC,CAAC,EACQ,GACI,CAEtB,CAAC,CACD,cAAeV,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
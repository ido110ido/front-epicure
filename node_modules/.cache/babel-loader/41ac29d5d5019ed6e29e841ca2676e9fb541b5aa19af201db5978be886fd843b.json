{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"./resturants.json\";\nconst yearInMilliseconds = 31536000000;\nconst getRestaurantData = async () => {\n  return await fetch(\"http://localhost:8000/restaurants\").then(response => response.json()).then(data => {\n    console.log(data);\n    return data.data;\n  }).catch(error => {\n    console.error(\"Error getting Restaurant data:\", error);\n  });\n};\nconst restaurantsData = await getRestaurantData();\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    restaurantsData: data.restaurants,\n    value: data.restaurants,\n    chefRestaurants: {}\n  },\n  reducers: {\n    all: state => {\n      state.value = state.restaurantsData;\n    },\n    newRestaurants: state => {\n      const currentDate = new Date().getTime();\n      state.value = state.restaurantsData.filter(e => {\n        return new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2;\n      });\n    },\n    openRestaurants: state => {\n      const currentHour = new Date().getHours();\n      state.value = state.restaurantsData.filter(e => {\n        return e.openHour <= currentHour && currentHour < e.closeHour;\n      });\n    },\n    popularRestaurants: state => {\n      const temp = state.restaurantsData;\n      state.value = temp.sort((a, b) => a.visited - b.visited).slice(0, 10);\n    },\n    topThreePopularRestaurants: state => {\n      state.value = state.restaurantsData.sort((a, b) => a.visited - b.visited).slice(0, 3);\n    },\n    filterByRating: (state, action) => {\n      state.value = state.restaurantsData.filter(e => action.payload.includes(e.rating));\n    },\n    profileRestaurant: (state, action) => {\n      state.value = state.restaurantsData.filter(e => e._id === action.payload);\n    },\n    chefRestaurant: (state, action) => {\n      state.chefRestaurants = state.restaurantsData.filter(e => e.chefId === action.payload);\n    }\n  }\n});\nexport const {\n  all,\n  newRestaurants,\n  openRestaurants,\n  popularRestaurants,\n  filterByRating,\n  topThreePopularRestaurants,\n  profileRestaurant,\n  chefRestaurant\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","yearInMilliseconds","getRestaurantData","fetch","then","response","json","console","log","catch","error","restaurantsData","restaurantsSlice","name","initialState","restaurants","value","chefRestaurants","reducers","all","state","newRestaurants","currentDate","Date","getTime","filter","e","startDate","openRestaurants","currentHour","getHours","openHour","closeHour","popularRestaurants","temp","sort","a","b","visited","slice","topThreePopularRestaurants","filterByRating","action","payload","includes","rating","profileRestaurant","_id","chefRestaurant","chefId","actions","reducer"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/data/resturantSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IRestaurant } from \"../component/Types/Interfaces/IRestaurantCard\";\r\nimport data from \"./resturants.json\";\r\nconst yearInMilliseconds = 31536000000;\r\nexport interface IRestaurantsState {\r\n  restaurantsData: IRestaurant[];\r\n  value: IRestaurant[];\r\n  chefRestaurants: IRestaurant[];\r\n}\r\n\r\nconst getRestaurantData = async () => {\r\n  return await fetch(\"http://localhost:8000/restaurants\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      return data.data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error getting Restaurant data:\", error);\r\n    });\r\n};\r\nconst restaurantsData: IRestaurant[] = await getRestaurantData();\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    restaurantsData: data.restaurants,\r\n    value: data.restaurants,\r\n    chefRestaurants: {},\r\n  },\r\n  reducers: {\r\n    all: (state) => {\r\n      state.value = state.restaurantsData;\r\n    },\r\n    newRestaurants: (state) => {\r\n      const currentDate = new Date().getTime();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return (\r\n          new Date(e.startDate).getTime() > currentDate - yearInMilliseconds * 2\r\n        );\r\n      });\r\n    },\r\n    openRestaurants: (state) => {\r\n      const currentHour = new Date().getHours();\r\n      state.value = state.restaurantsData.filter((e) => {\r\n        return e.openHour <= currentHour && currentHour < e.closeHour;\r\n      });\r\n    },\r\n    popularRestaurants: (state) => {\r\n      const temp = state.restaurantsData;\r\n      state.value = temp.sort((a, b) => a.visited - b.visited).slice(0, 10);\r\n    },\r\n    topThreePopularRestaurants: (state) => {\r\n      state.value = state.restaurantsData\r\n        .sort((a, b) => a.visited - b.visited)\r\n        .slice(0, 3);\r\n    },\r\n    filterByRating: (state, action) => {\r\n      state.value = state.restaurantsData.filter((e) =>\r\n        action.payload.includes(e.rating)\r\n      );\r\n    },\r\n    profileRestaurant: (state, action) => {\r\n      state.value = state.restaurantsData.filter(\r\n        (e) => e._id === action.payload\r\n      );\r\n    },\r\n    chefRestaurant: (state, action) => {\r\n      state.chefRestaurants = state.restaurantsData.filter(\r\n        (e) => e.chefId === action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  all,\r\n  newRestaurants,\r\n  openRestaurants,\r\n  popularRestaurants,\r\n  filterByRating,\r\n  topThreePopularRestaurants,\r\n  profileRestaurant,\r\n  chefRestaurant,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,MAAMC,kBAAkB,GAAG,WAAW;AAOtC,MAAMC,iBAAiB,GAAG,YAAY;EACpC,OAAO,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEJ,IAAI,IAAK;IACdO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,OAAOA,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD,CAAC,CAAC;AACN,CAAC;AACD,MAAMC,eAA8B,GAAG,MAAMT,iBAAiB,EAAE;AAEhE,OAAO,MAAMU,gBAAgB,GAAGb,WAAW,CAAC;EAC1Cc,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZH,eAAe,EAAEX,IAAI,CAACe,WAAW;IACjCC,KAAK,EAAEhB,IAAI,CAACe,WAAW;IACvBE,eAAe,EAAE,CAAC;EACpB,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,EAAGC,KAAK,IAAK;MACdA,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe;IACrC,CAAC;IACDU,cAAc,EAAGD,KAAK,IAAK;MACzB,MAAME,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MACxCJ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe,CAACc,MAAM,CAAEC,CAAC,IAAK;QAChD,OACE,IAAIH,IAAI,CAACG,CAAC,CAACC,SAAS,CAAC,CAACH,OAAO,EAAE,GAAGF,WAAW,GAAGrB,kBAAkB,GAAG,CAAC;MAE1E,CAAC,CAAC;IACJ,CAAC;IACD2B,eAAe,EAAGR,KAAK,IAAK;MAC1B,MAAMS,WAAW,GAAG,IAAIN,IAAI,EAAE,CAACO,QAAQ,EAAE;MACzCV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe,CAACc,MAAM,CAAEC,CAAC,IAAK;QAChD,OAAOA,CAAC,CAACK,QAAQ,IAAIF,WAAW,IAAIA,WAAW,GAAGH,CAAC,CAACM,SAAS;MAC/D,CAAC,CAAC;IACJ,CAAC;IACDC,kBAAkB,EAAGb,KAAK,IAAK;MAC7B,MAAMc,IAAI,GAAGd,KAAK,CAACT,eAAe;MAClCS,KAAK,CAACJ,KAAK,GAAGkB,IAAI,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACvE,CAAC;IACDC,0BAA0B,EAAGpB,KAAK,IAAK;MACrCA,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe,CAChCwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,CAAC,CACrCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IACDE,cAAc,EAAE,CAACrB,KAAK,EAAEsB,MAAM,KAAK;MACjCtB,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe,CAACc,MAAM,CAAEC,CAAC,IAC3CgB,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAClB,CAAC,CAACmB,MAAM,CAAC,CAClC;IACH,CAAC;IACDC,iBAAiB,EAAE,CAAC1B,KAAK,EAAEsB,MAAM,KAAK;MACpCtB,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACT,eAAe,CAACc,MAAM,CACvCC,CAAC,IAAKA,CAAC,CAACqB,GAAG,KAAKL,MAAM,CAACC,OAAO,CAChC;IACH,CAAC;IACDK,cAAc,EAAE,CAAC5B,KAAK,EAAEsB,MAAM,KAAK;MACjCtB,KAAK,CAACH,eAAe,GAAGG,KAAK,CAACT,eAAe,CAACc,MAAM,CACjDC,CAAC,IAAKA,CAAC,CAACuB,MAAM,KAAKP,MAAM,CAACC,OAAO,CACnC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXxB,GAAG;EACHE,cAAc;EACdO,eAAe;EACfK,kBAAkB;EAClBQ,cAAc;EACdD,0BAA0B;EAC1BM,iBAAiB;EACjBE;AACF,CAAC,GAAGpC,gBAAgB,CAACsC,OAAO;AAE5B,eAAetC,gBAAgB,CAACuC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
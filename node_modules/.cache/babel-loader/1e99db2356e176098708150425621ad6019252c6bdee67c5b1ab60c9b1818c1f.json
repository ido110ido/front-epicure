{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { DayPart } from \"../component/Types/enums/DishEnums\";\nimport data from \"./resturants.json\";\nconst filterByDayPart = async (restaurantId, DayPart) => {\n  try {\n    let data = await axios.post(\"http://localhost:8000/dishes\", {\n      resturantId: restaurantId,\n      DayPart: DayPart\n    });\n    return data.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const dishSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    dishesData: data.dishes,\n    value: data.dishes\n  },\n  reducers: {\n    morning: {\n      reducer: (state, action) => {\n        state.value = action.payload;\n      },\n      prepare: async () => {\n        const result = await filterByDayPart(\"64075501752f15ccca196049\", DayPart.Breakfast);\n        return {\n          payload: result\n        };\n      }\n    },\n    noon: (state, action) => {\n      state.value = state.dishesData.filter(e => e.DayPart === DayPart.Launch && e.resturantId === action.payload);\n    },\n    evening: (state, action) => {\n      state.value = state.dishesData.filter(e => e.DayPart === DayPart.Dinner && e.resturantId === action.payload);\n    },\n    topThreePopularDish: state => {\n      state.value = state.dishesData.sort((a, b) => b.visited - a.visited).slice(0, 3);\n    }\n  }\n});\nexport const {\n  morning,\n  noon,\n  evening,\n  topThreePopularDish\n} = dishSlice.actions;\nexport default dishSlice.reducer;","map":{"version":3,"names":["createSlice","axios","DayPart","data","filterByDayPart","restaurantId","post","resturantId","error","console","dishSlice","name","initialState","dishesData","dishes","value","reducers","morning","reducer","state","action","payload","prepare","result","Breakfast","noon","filter","e","Launch","evening","Dinner","topThreePopularDish","sort","a","b","visited","slice","actions"],"sources":["C:/Users/User/OneDrive/שולחן העבודה/full stack curse/epicure/front/src/data/dishSlicer.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { DayPart } from \"../component/Types/enums/DishEnums\";\r\nimport { IDish } from \"../component/Types/Interfaces/IDishCard\";\r\nimport data from \"./resturants.json\";\r\n\r\nexport interface IDishesState {\r\n  dishesData: IDish[];\r\n  value: IDish[];\r\n}\r\n\r\nconst filterByDayPart = async (restaurantId: string, DayPart: DayPart) => {\r\n  try {\r\n    let data = await axios.post(\"http://localhost:8000/dishes\", {\r\n      resturantId: restaurantId,\r\n      DayPart: DayPart,\r\n    });\r\n    return data.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const dishSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    dishesData: data.dishes,\r\n    value: data.dishes,\r\n  },\r\n  reducers: {\r\n    morning: {\r\n      reducer: (state, action: PayloadAction<IDish[]>) => {\r\n        state.value = action.payload;\r\n      },\r\n      prepare: async () => {\r\n        const result = await filterByDayPart(\r\n          \"64075501752f15ccca196049\",\r\n          DayPart.Breakfast\r\n        );\r\n        return { payload: result };\r\n      },\r\n    },\r\n    noon: (state, action: PayloadAction<string>) => {\r\n      state.value = state.dishesData.filter(\r\n        (e) => e.DayPart === DayPart.Launch && e.resturantId === action.payload\r\n      );\r\n    },\r\n    evening: (state, action: PayloadAction<string>) => {\r\n      state.value = state.dishesData.filter(\r\n        (e) => e.DayPart === DayPart.Dinner && e.resturantId === action.payload\r\n      );\r\n    },\r\n    topThreePopularDish: (state) => {\r\n      state.value = state.dishesData\r\n        .sort((a, b) => b.visited - a.visited)\r\n        .slice(0, 3);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { morning, noon, evening, topThreePopularDish } =\r\n  dishSlice.actions;\r\n\r\nexport default dishSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,oCAAoC;AAE5D,OAAOC,IAAI,MAAM,mBAAmB;AAOpC,MAAMC,eAAe,GAAG,OAAOC,YAAoB,EAAEH,OAAgB,KAAK;EACxE,IAAI;IACF,IAAIC,IAAI,GAAG,MAAMF,KAAK,CAACK,IAAI,CAAC,8BAA8B,EAAE;MAC1DC,WAAW,EAAEF,YAAY;MACzBH,OAAO,EAAEA;IACX,CAAC,CAAC;IACF,OAAOC,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,UAAU,EAAEV,IAAI,CAACW,MAAM;IACvBC,KAAK,EAAEZ,IAAI,CAACW;EACd,CAAC;EACDE,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAA8B,KAAK;QAClDD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO;MAC9B,CAAC;MACDC,OAAO,EAAE,YAAY;QACnB,MAAMC,MAAM,GAAG,MAAMnB,eAAe,CAClC,0BAA0B,EAC1BF,OAAO,CAACsB,SAAS,CAClB;QACD,OAAO;UAAEH,OAAO,EAAEE;QAAO,CAAC;MAC5B;IACF,CAAC;IACDE,IAAI,EAAE,CAACN,KAAK,EAAEC,MAA6B,KAAK;MAC9CD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACN,UAAU,CAACa,MAAM,CAClCC,CAAC,IAAKA,CAAC,CAACzB,OAAO,KAAKA,OAAO,CAAC0B,MAAM,IAAID,CAAC,CAACpB,WAAW,KAAKa,MAAM,CAACC,OAAO,CACxE;IACH,CAAC;IACDQ,OAAO,EAAE,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACjDD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACN,UAAU,CAACa,MAAM,CAClCC,CAAC,IAAKA,CAAC,CAACzB,OAAO,KAAKA,OAAO,CAAC4B,MAAM,IAAIH,CAAC,CAACpB,WAAW,KAAKa,MAAM,CAACC,OAAO,CACxE;IACH,CAAC;IACDU,mBAAmB,EAAGZ,KAAK,IAAK;MAC9BA,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACN,UAAU,CAC3BmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,OAAO,GAAGF,CAAC,CAACE,OAAO,CAAC,CACrCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEnB,OAAO;EAAEQ,IAAI;EAAEI,OAAO;EAAEE;AAAoB,CAAC,GAC1DrB,SAAS,CAAC2B,OAAO;AAEnB,eAAe3B,SAAS,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}